<!-- /home/lenovo/code/ltphongssvn/task-management-final/views/tasks/index.ejs -->
<!-- Complete task listing page with improved search and filter functionality -->

<h2>My Tasks</h2>

<style>
    /* Container and layout styles */
    .tasks-container {
        max-width: 1200px;
        margin: 0 auto;
    }

    /* Search and filter section styles */
    .search-filter-section {
        background: #f7f7f7;
        padding: 1.5rem;
        border-radius: 8px;
        margin-bottom: 2rem;
    }

    .search-bar {
        display: flex;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .search-input {
        flex: 1;
        padding: 0.75rem;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        font-size: 1rem;
    }

    .search-button {
        padding: 0.75rem 1.5rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-size: 1rem;
    }

    .filters {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .filter-group {
        display: flex;
        flex-direction: column;
    }

    .filter-label {
        font-size: 0.85rem;
        color: #666;
        margin-bottom: 0.25rem;
    }

    .filter-select {
        padding: 0.5rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        background: white;
        cursor: pointer;
    }

    /* Active filters display */
    .active-filters {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
        margin-top: 1rem;
    }

    .filter-tag {
        background: #667eea;
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 16px;
        font-size: 0.85rem;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .clear-filters {
        background: #e0e0e0;
        color: #333;
        text-decoration: none;
        padding: 0.25rem 0.75rem;
        border-radius: 16px;
        font-size: 0.85rem;
    }

    /* Task overview and actions */
    .task-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }

    /* Button styles */
    .btn {
        padding: 0.75rem 1.5rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        text-decoration: none;
        border-radius: 8px;
        border: none;
        cursor: pointer;
        font-size: 1rem;
        transition: transform 0.2s;
    }

    .btn:hover {
        transform: translateY(-2px);
    }

    .btn-small {
        padding: 0.4rem 0.8rem;
        font-size: 0.9rem;
    }

    .btn-edit {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .btn-delete {
        background: linear-gradient(135deg, #f56565 0%, #ed64a6 100%);
    }

    /* Statistics cards */
    .task-stats {
        display: flex;
        gap: 2rem;
        margin-bottom: 2rem;
        flex-wrap: wrap;
    }

    .stat-card {
        background: #f7f7f7;
        padding: 1rem 1.5rem;
        border-radius: 8px;
        min-width: 150px;
    }

    .stat-label {
        color: #666;
        font-size: 0.9rem;
    }

    .stat-value {
        font-size: 1.5rem;
        font-weight: bold;
        color: #333;
    }

    /* Task table styles */
    .tasks-table {
        width: 100%;
        background: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .tasks-table table {
        width: 100%;
        border-collapse: collapse;
    }

    .tasks-table th {
        background: #f7f7f7;
        padding: 1rem;
        text-align: left;
        font-weight: 600;
        color: #333;
        border-bottom: 2px solid #e0e0e0;
    }

    .tasks-table td {
        padding: 1rem;
        border-bottom: 1px solid #f0f0f0;
    }

    .tasks-table tr:hover {
        background: #fafafa;
    }

    /* Status badge styles */
    .status-badge {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        border-radius: 12px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .status-pending {
        background: #fef3c7;
        color: #92400e;
    }

    .status-in-progress {
        background: #dbeafe;
        color: #1e40af;
    }

    .status-completed {
        background: #d1fae5;
        color: #064e3b;
    }

    /* Priority indicator styles */
    .priority {
        display: inline-block;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        text-align: center;
        font-size: 0.8rem;
        font-weight: bold;
        color: white;
        line-height: 20px;
    }

    .priority-1 { background: #10b981; }
    .priority-2 { background: #3b82f6; }
    .priority-3 { background: #f59e0b; }
    .priority-4 { background: #ef4444; }
    .priority-5 { background: #7c3aed; }

    /* Tag styles */
    .tag {
        display: inline-block;
        padding: 0.2rem 0.5rem;
        background: #e0e7ff;
        color: #4338ca;
        border-radius: 4px;
        font-size: 0.8rem;
        margin-right: 0.25rem;
    }

    /* Empty state styles */
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: #666;
    }

    .empty-state h3 {
        color: #333;
        margin-bottom: 1rem;
    }

    /* Action buttons in table */
    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }

    .delete-form {
        display: inline;
    }
</style>

<!-- Add JavaScript for form submission handling -->
<script>
    // This function handles the filter changes with proper error handling
    function submitFilterForm() {
        try {
            const form = document.getElementById('searchFilterForm');
            if (form) {
                form.submit();
            }
        } catch (error) {
            console.error('Error submitting form:', error);
            // If automatic submission fails, we could show a manual submit button
        }
    }

    // Alternative: Add event listeners after page loads
    document.addEventListener('DOMContentLoaded', function() {
        // Get all filter select elements
        const filterSelects = document.querySelectorAll('.filter-select');

        // Add change event listener to each
        filterSelects.forEach(function(select) {
            select.addEventListener('change', function() {
                submitFilterForm();
            });
        });
    });
</script>

<div class="tasks-container">
    <!-- Search and Filter Section -->
    <div class="search-filter-section">
        <form method="GET" action="/tasks" id="searchFilterForm">
            <div class="search-bar">
                <input
                        type="text"
                        name="search"
                        class="search-input"
                        placeholder="Search tasks by title or description..."
                        value="<%= typeof filters !== 'undefined' && filters.search ? filters.search : '' %>"
                >
                <button type="submit" class="search-button">Search</button>
            </div>

            <div class="filters">
                <div class="filter-group">
                    <label class="filter-label">Status</label>
                    <select name="status" class="filter-select">
                        <option value="">All Status</option>
                        <option value="pending" <%= typeof filters !== 'undefined' && filters.status === 'pending' ? 'selected' : '' %>>Pending</option>
                        <option value="in-progress" <%= typeof filters !== 'undefined' && filters.status === 'in-progress' ? 'selected' : '' %>>In Progress</option>
                        <option value="completed" <%= typeof filters !== 'undefined' && filters.status === 'completed' ? 'selected' : '' %>>Completed</option>
                    </select>
                </div>

                <div class="filter-group">
                    <label class="filter-label">Priority</label>
                    <select name="priority" class="filter-select">
                        <option value="">All Priorities</option>
                        <option value="1" <%= typeof filters !== 'undefined' && filters.priority === '1' ? 'selected' : '' %>>1 - Low</option>
                        <option value="2" <%= typeof filters !== 'undefined' && filters.priority === '2' ? 'selected' : '' %>>2 - Medium-Low</option>
                        <option value="3" <%= typeof filters !== 'undefined' && filters.priority === '3' ? 'selected' : '' %>>3 - Medium</option>
                        <option value="4" <%= typeof filters !== 'undefined' && filters.priority === '4' ? 'selected' : '' %>>4 - Medium-High</option>
                        <option value="5" <%= typeof filters !== 'undefined' && filters.priority === '5' ? 'selected' : '' %>>5 - High</option>
                    </select>
                </div>

                <% if (typeof allTags !== 'undefined' && allTags && allTags.length > 0) { %>
                    <div class="filter-group">
                        <label class="filter-label">Tag</label>
                        <select name="tag" class="filter-select">
                            <option value="">All Tags</option>
                            <% allTags.forEach(tag => { %>
                                <option value="<%= tag %>" <%= typeof filters !== 'undefined' && filters.tag === tag ? 'selected' : '' %>><%= tag %></option>
                            <% }) %>
                        </select>
                    </div>
                <% } %>

                <div class="filter-group">
                    <label class="filter-label">Sort By</label>
                    <select name="sort" class="filter-select">
                        <option value="">Newest First</option>
                        <option value="oldest" <%= typeof filters !== 'undefined' && filters.sort === 'oldest' ? 'selected' : '' %>>Oldest First</option>
                        <option value="priority-high" <%= typeof filters !== 'undefined' && filters.sort === 'priority-high' ? 'selected' : '' %>>Priority (High to Low)</option>
                        <option value="priority-low" <%= typeof filters !== 'undefined' && filters.sort === 'priority-low' ? 'selected' : '' %>>Priority (Low to High)</option>
                        <option value="due-soon" <%= typeof filters !== 'undefined' && filters.sort === 'due-soon' ? 'selected' : '' %>>Due Date (Soonest)</option>
                        <option value="title" <%= typeof filters !== 'undefined' && filters.sort === 'title' ? 'selected' : '' %>>Title (A-Z)</option>
                    </select>
                </div>
            </div>

            <!-- Show active filters if any are applied -->
            <%
            let hasActiveFilters = false;
            if (typeof filters !== 'undefined') {
                hasActiveFilters = filters.search || filters.status ||
                        filters.priority || filters.tag || filters.sort;
            }
            %>
            <% if (hasActiveFilters) { %>
                <div class="active-filters">
                    <% if (filters.search) { %>
                        <span class="filter-tag">Search: "<%= filters.search %>"</span>
                    <% } %>
                    <% if (filters.status) { %>
                        <span class="filter-tag">Status: <%= filters.status %></span>
                    <% } %>
                    <% if (filters.priority) { %>
                        <span class="filter-tag">Priority: <%= filters.priority %></span>
                    <% } %>
                    <% if (filters.tag) { %>
                        <span class="filter-tag">Tag: <%= filters.tag %></span>
                    <% } %>
                    <% if (filters.sort) { %>
                        <span class="filter-tag">Sort: <%= filters.sort %></span>
                    <% } %>
                    <a href="/tasks" class="clear-filters">Clear All Filters</a>
                </div>
            <% } %>
        </form>
    </div>

    <!-- Task Overview Header -->
    <div class="task-actions">
        <h3>
            Task Overview
            <% if (hasActiveFilters) { %>
                <small style="font-weight: normal; color: #666;">
                    (Showing <%= tasks.length %> filtered result<%= tasks.length !== 1 ? 's' : '' %>)
                </small>
            <% } %>
        </h3>
        <a href="/tasks/new" class="btn">+ New Task</a>
    </div>

    <!-- Task Statistics Cards -->
    <div class="task-stats">
        <div class="stat-card">
            <div class="stat-label">Total Tasks</div>
            <div class="stat-value"><%= tasks.length %></div>
        </div>
        <div class="stat-card">
            <div class="stat-label">Pending</div>
            <div class="stat-value"><%= tasksByStatus.pending.length %></div>
        </div>
        <div class="stat-card">
            <div class="stat-label">In Progress</div>
            <div class="stat-value"><%= tasksByStatus['in-progress'].length %></div>
        </div>
        <div class="stat-card">
            <div class="stat-label">Completed</div>
            <div class="stat-value"><%= tasksByStatus.completed.length %></div>
        </div>
    </div>

    <!-- Task Display Section -->
    <% if (tasks.length === 0) { %>
        <!-- Empty State -->
        <div class="empty-state">
            <h3>No tasks found</h3>
            <% if (hasActiveFilters) { %>
                <p>No tasks match your current filters. Try adjusting your search criteria.</p>
                <a href="/tasks" class="btn">Clear Filters</a>
            <% } else { %>
                <p>Start by creating your first task to get organized!</p>
                <a href="/tasks/new" class="btn">Create Your First Task</a>
            <% } %>
        </div>
    <% } else { %>
        <!-- Task Table -->
        <div class="tasks-table">
            <table>
                <thead>
                <tr>
                    <th>Title</th>
                    <th>Status</th>
                    <th>Priority</th>
                    <th>Due Date</th>
                    <th>Tags</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                <% tasks.forEach(task => { %>
                    <tr>
                        <td>
                            <strong><%= task.title %></strong>
                            <% if (task.description) { %>
                                <br>
                                <small style="color: #666;">
                                    <%= task.description.substring(0, 100) %><%= task.description.length > 100 ? '...' : '' %>
                                </small>
                            <% } %>
                        </td>
                        <td>
                                <span class="status-badge status-<%= task.status %>">
                                    <%= task.status %>
                                </span>
                        </td>
                        <td>
                                <span class="priority priority-<%= task.priority %>">
                                    <%= task.priority %>
                                </span>
                        </td>
                        <td>
                            <% if (task.dueDate) { %>
                                <%= new Date(task.dueDate).toLocaleDateString('en-US', {
                                    year: 'numeric',
                                    month: 'short',
                                    day: 'numeric'
                                }) %>
                                <%
                                    // Check if task is overdue
                                    const now = new Date();
                                    const dueDate = new Date(task.dueDate);
                                if (task.status !== 'completed' && dueDate < now) {
                                %>
                                    <br><small style="color: red;">Overdue</small>
                                <% } %>
                            <% } else { %>
                                <span style="color: #999;">-</span>
                            <% } %>
                        </td>
                        <td>
                            <% if (task.tags && task.tags.length > 0) { %>
                                <% task.tags.forEach(tag => { %>
                                    <span class="tag"><%= tag %></span>
                                <% }) %>
                            <% } else { %>
                                <span style="color: #999;">-</span>
                            <% } %>
                        </td>
                        <td>
                            <div class="action-buttons">
                                <a href="/tasks/edit/<%= task._id %>" class="btn btn-small btn-edit">Edit</a>
                                <form method="POST" action="/tasks/delete/<%= task._id %>"
                                      class="delete-form"
                                      onsubmit="return confirm('Are you sure you want to delete this task?');">
                                    <input type="hidden" name="_csrf" value="<%= _csrf %>">
                                    <button type="submit" class="btn btn-small btn-delete">Delete</button>
                                </form>
                            </div>
                        </td>
                    </tr>
                <% }) %>
                </tbody>
            </table>
        </div>
    <% } %>
</div>